/*reseting */
*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    list-style: none;
    font-family: "Montserrat", sans-serif;
    border: none;
}
:root{
    --darkgrey: #1a2a32;
    --grey: #2e4756;
    --turquoise: #3cc4bf;
    --yellow: #f2b147;
    --lightgrey: #d3d3d3;
}
/*shared utility classes*/
.hidden{
    display: none !important;
}
.shadow{
    box-shadow: rgba(0,0,0,0.4) 0px 2px 4px,
    rgba(0,0,0,0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.3);
}
.border{
    border: 1px solid
    rgba(211, 211, 211, 0.4)
    !important;
}

/*seetingg up body and background color*/
body{
    height: 100%;
    background-color: var(--darkgrey);
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    padding: 90px 20px;
}
.grid{
    display: grid;
    grid-template-columns: repeat(3, 80px);
    grid-template-rows: 50px repeat(3, 80px) 60px;
    gap: 5px;
}
@media(min-width: 768px){
    .grid{
        
        width: 490px;
        grid-template-columns: repeat(3, 150px);
        grid-template-rows: 50px repeat(3, 150px) 60px;
        gap: 20px;
    }
}
/*
setting up a grid container to resize acc to what screen we're working on
this media we did for tablet or desktop the original is for mobile*/
@keyframes turn-text-animation {
    0%{
        opacity: 0;
        transform: translateX(-20px);
    }
    100%{
        opacity: 100%;
        transform: translateX(0);
    }
}
@keyframes turn-icon-animation {
    0%{
        transform: scale(1);
    }
    15%{
        transform: scale(1.4);
    }
    100%{
        transform: scale(1);
    }
}
.turn{
    /*background-color: green;*/
    grid-column-start: 1;
    grid-column-end: 3;
    align-self: center;
    display: flex;
    gap: 20px;
    color: var(--yellow);
}
.turn p{
    font-size: 14px;
    animation: 0.6s ease-in-out turn-text-animation;
}
.turn i{
    font-size: 1.8rem;
    margin-left: 10px;
    animation: 0.6s ease-in-out turn-icon-animation;
}
/*
0.6s: duration
ease in out: action
@keyframes are used to create animations by defining intermediate steps in how an element should change styles over time.
in this keyframes, we'll see how the icon pops in and out and then reloads
and for text pull to left and then goes back to original
*/
.square{
    background-color: var(--grey);
    border-radius: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 3rem;
}
.square:hover{
    cursor: pointer;
    opacity: 80%;
}
.score{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 60px;
    border-radius: 10px;
}
.score p{
    font-size: 14px;
    font-weight: 600;
}
.score span{
    font-size: 12px;
    margin-top: 2px;
}
.action{
    position: relative;
}
.action .item{
    position: absolute;
    z-index: 10;
    top: 60px;
    right: 0;
    background-color: #203139;
    border-radius: 2px;
    padding: 10px;
}
.action .menu-btn{
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: space-around;
    align-items: center;
    border-radius: 10px;
    color: white;
    background-color: rgba(211, 211, 211, 0.05);
    border: 1px solid transparent;
}
.action .item button{
    background-color: transparent;
    padding: 8px;
    color: white;
    border-radius: 50px;
}
.action .item button:hover{
    text-decoration: underline;
    cursor: pointer;
}

/*footer styling*/
footer{
    color: white;
    margin-top: 50px;
}
footer p{
    margin-top: 10px;
    text-align: center;
}
footer a{
    color: var(--yellow);
}
.model{
    display: flex;
    justify-content: center;
    align-items: center;
    position: fixed;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0,0,0.6);
}
.model-control{
    transform: translateY(-80px);
    height: 150px;
    width: 100%;
    max-width: 300px;
    background-color: #2a4544;
    border-radius: 20px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 20px;
    color: white;
    margin: 10px;
}
.model-control button{
    padding: 10px;
    background-color: rgb(77, 129, 161);
    color: #2a4544;
    border-radius: 3px;
}